{"ast":null,"code":"var _jsxFileName = \"D:\\\\RealtimeChatApp\\\\public\\\\chat-app\\\\src\\\\pages\\\\SetAvatar.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport loader from \"../assets/loader.gif\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport { SetAvatarRoute } from '../utils/APIRoutes';\nimport { Buffer } from \"buffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvatar() {\n  _s();\n  const api = 'https://api.multiavatar.com/45678945';\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: 'bottom-right',\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: 'dark'\n  };\n  useEffect(() => {\n    if (!localStorage.getItem('chat-app-user')) {\n      navigate('/login');\n    }\n  }, []);\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\n      const {\n        data\n      } = await axios.post(`${SetAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar]\n      });\n      console.log(data);\n      if (data.isSet) {\n        user.isVatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\n        navigate('/');\n      } else {\n        toast.error(\"Error setting avatar. Please try again\", toastOptions);\n      }\n    }\n  };\n\n  // useEffect(async () => {\n  //     const data = []\n  //     for (let i = 0; i < 4; i++) {\n  //         const image = await axios.get(\n  //             `${api}/${Math.round(Math.random() * 1000)}`\n  //         )\n  //         const buffer = new Buffer(image.data)\n  //         data.push(buffer.toString(\"base64\"))\n  //     }\n  //     setAvatars(data)\n  //     setIsLoading(false)\n  // }, [])\n\n  // useEffect(() => {\n  //     const fetchData = async () => {\n  //         const data = [];\n  //         // foreach doesn't work with APIs\n  //         for (let i = 0; i < 4; i++) {\n  //             const image = await axios.get(\n  //                 `${api}/${Math.round(Math.random() * 1000)}`\n  //             );\n  //             const buffer = new Buffer(image.data);\n  //             data.push(buffer.toString(\"base64\"));\n  //         }\n\n  //         setAvatars(data);\n  //         setIsLoading(false);\n  //     };\n\n  //     fetchData();\n  // }, []);\n\n  const getAvatars = async () => {\n    try {\n      const data = [];\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const buffer = new Buffer(image.data);\n        data.push(buffer.toString('base64'));\n      }\n      setAvatars(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log('Error while fetching data. ' + error);\n    }\n  };\n  useEffect(() => {\n    getAvatars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"loader\",\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar for your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 45\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: setProfilePicture,\n        children: \"Set as profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SetAvatar, \"BeAPsJ8wCQQyE5ntbVx5JvwfYEY=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvatar;\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    gap: 3rem;\n    background-color: #131324;\n    height: 100vh;\n    width: 100vw;\n\n    .loader {\n        max-inline-size: 100%;\n    }\n\n    .title-container {\n        h1 {\n            color: white;\n        }\n    }\n\n    .avatars {\n        display: flex;\n        gap: 2rem;\n\n        .avatar {\n            border: 0.4rem solid transparent;\n            padding: 0.4rem;\n            border-radius: 5rem;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            transition: 0.5s ease-in-out;\n            img {\n                height: 6rem;\n                transition: 0.5s ease-in-out;\n            }\n        }\n\n        .selected {\n            border: 0.4rem solid #4e0eff;\n        }\n    }\n\n    .submit-btn {\n        background-color: #4e0eff;\n        color: white;\n        padding: 1rem 2rem;\n        border: none;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 0.4rem;\n        font-size: 1rem;\n        text-transform: uppercase;\n        &:hover {\n            background-color: #4e0eff;\n        }\n    }\n\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loader","ToastContainer","toast","axios","SetAvatarRoute","Buffer","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvatar","_s","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","localStorage","getItem","setProfilePicture","error","user","JSON","parse","data","post","_id","image","console","log","isSet","isVatarImageSet","avatarImage","setItem","stringify","getAvatars","i","get","Math","round","random","buffer","push","toString","children","Container","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","onClick","_c","div","_c2","$RefreshReg$"],"sources":["D:/RealtimeChatApp/public/chat-app/src/pages/SetAvatar.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport loader from \"../assets/loader.gif\"\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport axios from 'axios'\r\nimport { SetAvatarRoute } from '../utils/APIRoutes'\r\nimport { Buffer } from \"buffer\"\r\n\r\nexport default function SetAvatar() {\r\n    const api = 'https://api.multiavatar.com/45678945'\r\n    const navigate = useNavigate()\r\n    const [avatars, setAvatars] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined)\r\n\r\n    const toastOptions = {\r\n        position: 'bottom-right',\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: 'dark',\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('chat-app-user')) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    const setProfilePicture = async () => {\r\n        if (selectedAvatar === undefined) {\r\n            toast.error(\"Please select an avatar\", toastOptions)\r\n        }\r\n        else {\r\n            const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n            const { data } = await axios.post(`${SetAvatarRoute}/${user._id}`, {\r\n                image: avatars[selectedAvatar],\r\n            })\r\n\r\n            console.log(data)\r\n\r\n            if (data.isSet) {\r\n                user.isVatarImageSet = true\r\n                user.avatarImage = data.image\r\n                localStorage.setItem(\"chat-app-user\", JSON.stringify(user))\r\n                navigate('/')\r\n            }\r\n            else {\r\n                toast.error(\"Error setting avatar. Please try again\", toastOptions)\r\n            }\r\n        }\r\n    }\r\n\r\n    // useEffect(async () => {\r\n    //     const data = []\r\n    //     for (let i = 0; i < 4; i++) {\r\n    //         const image = await axios.get(\r\n    //             `${api}/${Math.round(Math.random() * 1000)}`\r\n    //         )\r\n    //         const buffer = new Buffer(image.data)\r\n    //         data.push(buffer.toString(\"base64\"))\r\n    //     }\r\n    //     setAvatars(data)\r\n    //     setIsLoading(false)\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const fetchData = async () => {\r\n    //         const data = [];\r\n    //         // foreach doesn't work with APIs\r\n    //         for (let i = 0; i < 4; i++) {\r\n    //             const image = await axios.get(\r\n    //                 `${api}/${Math.round(Math.random() * 1000)}`\r\n    //             );\r\n    //             const buffer = new Buffer(image.data);\r\n    //             data.push(buffer.toString(\"base64\"));\r\n    //         }\r\n\r\n    //         setAvatars(data);\r\n    //         setIsLoading(false);\r\n    //     };\r\n\r\n    //     fetchData();\r\n    // }, []);\r\n\r\n    const getAvatars = async () => {\r\n        try {\r\n            const data = [];\r\n            for (let i = 0; i < 4; i++) {\r\n                const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\r\n                const buffer = new Buffer(image.data);\r\n                data.push(buffer.toString('base64'));\r\n            }\r\n            setAvatars(data);\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            console.log('Error while fetching data. ' + error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAvatars();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ? <Container>\r\n                    <img src={loader} alt=\"loader\" className='loader' />\r\n                </Container> : (\r\n                    <Container>\r\n                        <div className=\"title-container\">\r\n                            <h1>Pick an avatar for your profile picture</h1>\r\n                        </div>\r\n\r\n                        <div className=\"avatars\">\r\n                            {\r\n                                avatars.map((avatar, index) => {\r\n                                    return (\r\n                                        <div key={index} className={`avatar ${selectedAvatar === index ? \"selected\" : \"\"}`}>\r\n                                            <img src={`data:image/svg+xml;base64,${avatar}`} alt=\"avatar\" onClick={() => setSelectedAvatar(index)} />\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <button className='submit-btn' onClick={setProfilePicture}>Set as profile picture</button>\r\n                    </Container>\r\n                )\r\n            }\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n    background-color: #131324;\r\n    height: 100vh;\r\n    width: 100vw;\r\n\r\n    .loader {\r\n        max-inline-size: 100%;\r\n    }\r\n\r\n    .title-container {\r\n        h1 {\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    .avatars {\r\n        display: flex;\r\n        gap: 2rem;\r\n\r\n        .avatar {\r\n            border: 0.4rem solid transparent;\r\n            padding: 0.4rem;\r\n            border-radius: 5rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 0.5s ease-in-out;\r\n            img {\r\n                height: 6rem;\r\n                transition: 0.5s ease-in-out;\r\n            }\r\n        }\r\n\r\n        .selected {\r\n            border: 0.4rem solid #4e0eff;\r\n        }\r\n    }\r\n\r\n    .submit-btn {\r\n        background-color: #4e0eff;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        &:hover {\r\n            background-color: #4e0eff;\r\n        }\r\n    }\r\n\r\n`"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,MAAM,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,GAAG,GAAG,sCAAsC;EAClD,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAACwB,SAAS,CAAC;EAE/D,MAAMC,YAAY,GAAG;IACjBC,QAAQ,EAAE,cAAc;IACxBC,SAAS,EAAE,IAAI;IACfC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE;EACX,CAAC;EAED7B,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC8B,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MACxCf,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIX,cAAc,KAAKE,SAAS,EAAE;MAC9BlB,KAAK,CAAC4B,KAAK,CAAC,yBAAyB,EAAET,YAAY,CAAC;IACxD,CAAC,MACI;MACD,MAAMU,IAAI,GAAG,MAAMC,IAAI,CAACC,KAAK,CAACN,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;MACpE,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAAE,GAAE/B,cAAe,IAAG2B,IAAI,CAACK,GAAI,EAAC,EAAE;QAC/DC,KAAK,EAAEvB,OAAO,CAACI,cAAc;MACjC,CAAC,CAAC;MAEFoB,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MAEjB,IAAIA,IAAI,CAACM,KAAK,EAAE;QACZT,IAAI,CAACU,eAAe,GAAG,IAAI;QAC3BV,IAAI,CAACW,WAAW,GAAGR,IAAI,CAACG,KAAK;QAC7BV,YAAY,CAACgB,OAAO,CAAC,eAAe,EAAEX,IAAI,CAACY,SAAS,CAACb,IAAI,CAAC,CAAC;QAC3DlB,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MACI;QACDX,KAAK,CAAC4B,KAAK,CAAC,wCAAwC,EAAET,YAAY,CAAC;MACvE;IACJ;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMX,IAAI,GAAG,EAAE;MACf,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACxB,MAAMT,KAAK,GAAG,MAAMlC,KAAK,CAAC4C,GAAG,CAAE,GAAEnC,GAAI,IAAGoC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAE,EAAC,CAAC;QAC3E,MAAMC,MAAM,GAAG,IAAI9C,MAAM,CAACgC,KAAK,CAACH,IAAI,CAAC;QACrCA,IAAI,CAACkB,IAAI,CAACD,MAAM,CAACE,QAAQ,CAAC,QAAQ,CAAC,CAAC;MACxC;MACAtC,UAAU,CAACmB,IAAI,CAAC;MAChBjB,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGT,KAAK,CAAC;IACtD;EACJ,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACZgD,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItC,OAAA,CAAAE,SAAA;IAAA6C,QAAA,GAEQtC,SAAS,gBAAGT,OAAA,CAACgD,SAAS;MAAAD,QAAA,eAClB/C,OAAA;QAAKiD,GAAG,EAAExD,MAAO;QAACyD,GAAG,EAAC,QAAQ;QAACC,SAAS,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,gBACRvD,OAAA,CAACgD,SAAS;MAAAD,QAAA,gBACN/C,OAAA;QAAKmD,SAAS,EAAC,iBAAiB;QAAAJ,QAAA,eAC5B/C,OAAA;UAAA+C,QAAA,EAAI;QAAuC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eAENvD,OAAA;QAAKmD,SAAS,EAAC,SAAS;QAAAJ,QAAA,EAEhBxC,OAAO,CAACiD,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;UAC3B,oBACI1D,OAAA;YAAiBmD,SAAS,EAAG,UAASxC,cAAc,KAAK+C,KAAK,GAAG,UAAU,GAAG,EAAG,EAAE;YAAAX,QAAA,eAC/E/C,OAAA;cAAKiD,GAAG,EAAG,6BAA4BQ,MAAO,EAAE;cAACP,GAAG,EAAC,QAAQ;cAACS,OAAO,EAAEA,CAAA,KAAM/C,iBAAiB,CAAC8C,KAAK;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC,GADnGG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CAAC;QAEd,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC,eAENvD,OAAA;QAAQmD,SAAS,EAAC,YAAY;QAACQ,OAAO,EAAErC,iBAAkB;QAAAyB,QAAA,EAAC;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CACd,eAGLvD,OAAA,CAACN,cAAc;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACpB,CAAC;AAEX;AAACnD,EAAA,CA/HuBD,SAAS;EAAA,QAEZX,WAAW;AAAA;AAAAoE,EAAA,GAFRzD,SAAS;AAiIjC,MAAM6C,SAAS,GAAGzD,MAAM,CAACsE,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GA1DKd,SAAS;AAAA,IAAAY,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}